import static com.kms.katalon.core.checkpoint.CheckpointFactory.findCheckpoint
import static com.kms.katalon.core.testcase.TestCaseFactory.findTestCase
import static com.kms.katalon.core.testdata.TestDataFactory.findTestData
import static com.kms.katalon.core.testobject.ObjectRepository.findTestObject
import static com.kms.katalon.core.testobject.ObjectRepository.findWindowsObject
import com.kms.katalon.core.checkpoint.Checkpoint as Checkpoint
import com.kms.katalon.core.cucumber.keyword.CucumberBuiltinKeywords as CucumberKW
import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.model.FailureHandling as FailureHandling
import com.kms.katalon.core.testcase.TestCase as TestCase
import com.kms.katalon.core.testdata.TestData as TestData
import com.kms.katalon.core.testng.keyword.TestNGBuiltinKeywords as TestNGKW
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.webservice.keyword.WSBuiltInKeywords as WS
import com.kms.katalon.core.webui.keyword.WebUiBuiltInKeywords as WebUI
import com.kms.katalon.core.windows.keyword.WindowsBuiltinKeywords as Windows
import internal.GlobalVariable as GlobalVariable
import org.openqa.selenium.Keys as Keys

import com.kms.katalon.core.mobile.keyword.MobileBuiltInKeywords as Mobile
import com.kms.katalon.core.testobject.TestObject as TestObject
import com.kms.katalon.core.util.KeywordUtil

Mobile.callTestCase(findTestCase('splash'), null)

Mobile.tap(findTestObject("Language/LanguageRadioButton/English"), 0)

Mobile.tap(findTestObject("Language/Buttonselect"), 0)
Mobile.tap(findTestObject("Intro/btnnext"), 0)

Mobile.tap(findTestObject("Intro/Text Start"), 0)
Mobile.tap(findTestObject("Favourite/BtnGetStarted"), 0)


Mobile.delay(5)
// Ki·ªÉm tra xem "Test Ad" c√≥ xu·∫•t hi·ªán kh√¥ng
if (Mobile.verifyElementExist(findTestObject('Object Repository/Test_Ad'), 5, FailureHandling.OPTIONAL)) {
	println("Qu·∫£ng c√°o xu·∫•t hi·ªán! ƒêang ƒë√≥ng...")

	// Nh·∫•n v√†o n√∫t Close Ads
	Mobile.tap(findTestObject('Object Repository/Close_Ads_Button'), 5)
	println("ƒê√£ nh·∫•n v√†o n√∫t ƒë√≥ng qu·∫£ng c√°o!")
} else {
	println("Kh√¥ng c√≥ qu·∫£ng c√°o xu·∫•t hi·ªán.")
}
Mobile.tap(findTestObject("Permission/CONTINUE"), 0)

// ƒê·ªãnh nghƒ©a s·ªë l·∫ßn ki·ªÉm tra
int totalChecks = 5   // S·ªë l·∫ßn ki·ªÉm tra (5 l·∫ßn)
int interval = 20       // Th·ªùi gian ch·ªù gi·ªØa m·ªói l·∫ßn ki·ªÉm tra (gi√¢y)

// L·∫∑p ki·ªÉm tra xem Dialog c√≥ xu·∫•t hi·ªán kh√¥ng
for (int i = 1; i <= totalChecks; i++) {
	KeywordUtil.logInfo("üîç Ki·ªÉm tra l·∫ßn th·ª© " + i)
	
	// Ch·ªù 5 gi√¢y tr∆∞·ªõc khi ki·ªÉm tra
	Mobile.delay(interval)
	
	// Ki·ªÉm tra xem Dialog c√≥ xu·∫•t hi·ªán kh√¥ng
	boolean isDialogPresent = Mobile.waitForElementPresent(findTestObject('Object Repository/Home/DialogIncomingCall'), 3, FailureHandling.OPTIONAL)
	
	if (isDialogPresent) {
		KeywordUtil.markPassed("‚úÖ Dialog xu·∫•t hi·ªán t·∫°i l·∫ßn ki·ªÉm tra th·ª© " + i)
	} else {
		KeywordUtil.markWarning("‚ö† Dialog KH√îNG xu·∫•t hi·ªán t·∫°i l·∫ßn ki·ªÉm tra th·ª© " + i)
	}
}

// ƒê√≥ng ·ª©ng d·ª•ng sau khi ki·ªÉm tra xong
Mobile.closeApplication()
